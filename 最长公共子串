#include<iostream>
#include<string>
#include<string.h>
using namespace std;

int longest_common_substring(char *str1, char *str2)
{
	int len1 = strlen(str1);
	int len2 = strlen(str2);
	int **c = new int*[len1+1];
	for(int i = 0; i < len1+1; ++i)
		c[i] = new int[len2+1];
	for(int i = 0; i < len1+1; ++i)
		c[i][0] = 0;
	for(int j = 0; j < len2+1; ++j)
		c[0][j] = 0;
	int max = 0;             //最长公共字串的长度
	int x = 0, y = 0;        //该字串的最后一个元素在原字符串中的对应位置
	for(int i = 1; i < len1+1; ++i){
		for(int j = 1; j < len2+1; ++j){
			if(str1[i-1] == str2[j-1])
				c[i][j] = c[i-1][j-1]+1;
			else
				c[i][j] = 0;
			if(c[i][j]>max){
				max = c[i][j];
				x = i;
				y = j;
			}
		}
	}
	//输出公共子串
	for(int k = max; k > 0; --k){
		cout<<str1[x-k]<<" ";
	}
	cout<<endl;
	for(int i = 0; i < len1+1; ++i
		delete[] c[i];
	delete[] c;
	return max;
}
int main()
{
	char a[] = "shaonian";
	char b[] = "onion";
	int num = longest_common_substring(a, b);
	cout<<num<<endl;
	return 0;
}
